(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{403:function(t,a,s){"use strict";s.r(a);var n=s(25),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1장-파이썬-데이터-모델"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1장-파이썬-데이터-모델"}},[t._v("#")]),t._v(" 1장 파이썬 데이터 모델")]),t._v(" "),s("h2",{attrs:{id:"기억에-남는-것들"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#기억에-남는-것들"}},[t._v("#")]),t._v(" 기억에 남는 것들")]),t._v(" "),s("h3",{attrs:{id:"namedtuple"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namedtuple"}},[t._v("#")]),t._v(" namedtuple")]),t._v(" "),s("p",[t._v("아래와 같은 형식으로 튜플에 이름을 붙여서 레코드처럼 사용할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" collections\n\nCard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" collections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namedtuple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Card'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rank'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'suit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Card"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spades'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"doctest-지시자"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctest-지시자"}},[t._v("#")]),t._v(" doctest 지시자")]),t._v(" "),s("p",[t._v("책에서 정확한 출력결과를 가져오기 위해서 코드를 사용하면서 doctest를 통과하기 위한 지시자로 이용했다고 하나, 이해가 잘 안된다.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" card "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" deck"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# doctest: +ELLIPSIS")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("card"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"문자열-표현"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#문자열-표현"}},[t._v("#")]),t._v(" 문자열 표현")]),t._v(" "),s("p",[t._v("책에서는 %연산자와 str.format()를 둘 다 이용함. % 연사자 사용시 %r를 이용함.")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://bit.ly/1Vm7gD1",target:"_blank",rel:"noopener noreferrer"}},[t._v("참고링크"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"len-이-메서드가-아닌-이유"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#len-이-메서드가-아닌-이유"}},[t._v("#")]),t._v(" len()이 메서드가 아닌 이유")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://python.org/doc/humor/#the-zen-of-python",target:"_blank",rel:"noopener noreferrer"}},[t._v("파이썬의 선 (The Zen of Python)"),s("OutboundLink")],1),t._v("에서 '실용성이 순수성에 우선한다(practicality beats purity)'라고 서술한 것처럼 len()은 특별취급받는다. CPython 구현상 내장 객체는 C 언어 구조체의 필드를 읽어오는 값싼 연산이며, len은 매우 빈번하게 호출되는 연산으로 효율적으로 작동하도록 구현되었다. 물론 "),s("code",[t._v("__len__()")]),t._v(" 메소드를 이용하여 동작을 직접 정의할 수도 있다.")])])}),[],!1,null,null,null);a.default=r.exports}}]);