(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{438:function(t,e,n){"use strict";n.r(e);var r=n(26),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"작업-결과를-내게-알려주기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#작업-결과를-내게-알려주기"}},[t._v("#")]),t._v(" 작업 결과를 내게 알려주기")]),t._v(" "),n("p",[t._v("특정 task가 끝났을 때, 알림을 주는 기능은 편의성을 개선하는데 도움이 된다. 여러가지 방안을 생각해보았는데, email를 보내는 방식이 가장 간단하다. 현재는 email 수신 시 알람이 울리는 기능은 매우 기본적인 기능이기 때문이다. 불과 10년 전만 하더라도 오바마 폰이라 불리던, 블랙베리의 킬링 피쳐였는데 말이다.")]),t._v(" "),n("p",[t._v("미국에서는 핸드폰 번호와 직접 연결된 email 주소를 제공해주고 있다. 그래서 email로 메시지를 보내면, 핸드폰 메시지로 전송되는 방식이다.")]),t._v(" "),n("p",[t._v("또 다른 방식으로 누구나 사용하는 카카오톡과 라인 등으로 메시지를 보내는 방식이 있다.")]),t._v(" "),n("p",[t._v('메시지를 보내는 방식도 2가지로 나뉠 수 있는데, 봇을 만들어서 봇에서 메시지를 전송하는 방식(이 경우 사용자가 봇을 추가해야 한다)과 REST API를 이용해서 직접 전송하는 방식이 있다. 후자가 좀 더 간편하게 구현할 수 있을 것 같아서 좀 찾아봤는데, 두 서비스 모두 "내게 메시지 보내기" 기능으로 알림을 구현하고 있다. 카카오톡은 푸시알람 기능도 제공하고 있으나, 이건 복잡하므로 생략. 카카오톡은 문서가 굉장히 잘 정리되어 있는데, 테스트해본 결과 내게 메시지를 보내도, 알림이 울리지 않았다. 개발팀 내부 판단인것 같은데, 내가 이용하고 싶은 상황에 맞지 않아서 패스.')]),t._v(" "),n("p",[t._v("사실 라인 알람을 써보고, 이글을 정리해야겠다는 생각을 했다. "),n("a",{attrs:{href:"https://github.com/golbin/line-notify",target:"_blank",rel:"noopener noreferrer"}},[t._v("line-notify"),n("OutboundLink")],1),t._v(" by Golbin를 이용해서 손쉽게 구현가능할 것으로 생각했고, 실제로 그러했다.")]),t._v(" "),n("p",[t._v("코드는 그대로 따라하면 되고, ACCESS_CODE는 "),n("a",{attrs:{href:"https://notify-bot.line.me/my/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Line Notify bot"),n("OutboundLink")],1),t._v("에서 로그인 후 My page로 이동하여, 키를 생성하면 된다. 페이지 구성상 서비스 생성을 해야 하는 것인가 생각하기도 했는데 (카카오톡 쪽은 서비스를 생성해야 한다), 간단히 키만 발급받으면 되어서 편했다. 단지 한 가지 불편한 점은 생성된 키는 생성당시만 확인이 가능하고, 그 창을 닫는 순간 다시는 찾아볼 수 없다는 점이 아쉽다.")])])}),[],!1,null,null,null);e.default=a.exports}}]);